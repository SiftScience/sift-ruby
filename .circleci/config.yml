version: 2.1

orbs:
  slack: circleci/slack@4.4.2

commands:
  export_slack_id:
    steps:
      - run:
          name  : Exporting circleci username as slack id.
          command: echo 'export SLACK_PARAM_MENTIONS="$CIRCLE_USERNAME"' >> "$BASH_ENV"
      - run:
          name : CircleCi To Slack user mapping.
          command: |
            echo $GITHUB_SLACK_USERMAPPING | base64 --decode > github_slack
            while read -r line || [[ -n $line ]];
            do
              [[ ${line//[[:space:]]/} =~ ^#.* || -z "$line" ]] && continue
              echo "$line" | tr "=" "\n" | while read -r key; do
              read -r value
              if [ "$CIRCLE_USERNAME" = "${key}" ]; then
                echo "export SLACK_PARAM_MENTIONS='<@${value}>'" >> $BASH_ENV
              fi
              done
            done < github_slack
            rm github_slack

slack/notify: &slack_notify
  branch_pattern: master
  event: fail
  channel: ci-build-status
  template: SLACK_TAG_CI_FAILURE_TEMPLATE

context: &context
  - slack-templates
  - slack_Oauth
  - Github_Slack_UserMapping

jobs:
  build:
    parallelism: 3 # run three instances of this job in parallel
    docker:
      - image: circleci/ruby:2.4.2-jessie-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
    steps:
      - checkout
      - export_slack_id

      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - sift-bundle-{{ checksum "sift.gemspec" }}
            - sift-bundle-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: sift-bundle-{{ checksum "sift.gemspec" }}
          paths:
            - vendor/bundle

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results
      - slack/notify:
          <<: *slack_notify

  run_integration_tests:
    docker:
        - image: circleci/ruby:2.4.2-jessie-node
    steps:
      - checkout
      - run:
          name: Install bundle and run the tests
          command: | 
            bundle check || bundle install
            bundle exec ruby test_integration_app/main.rb      

workflows:
  ruby-test:
    jobs:
      - build:
          context: *context
  ruby-integration-tests:
    jobs:
      - run_integration_tests:
          filters:
            branches:
              only: master
